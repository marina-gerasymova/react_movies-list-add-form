{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","lowercaseFirstLetter","string","charAt","toLowerCase","slice","NewMovie","fields","state","setField","event","target","name","value","setState","handleSubmit","preventDefault","trim","props","onAdd","method","onSubmit","this","field","type","placeholder","onChange","required","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCrBJK,G,MAAuB,SAAAC,GAAM,OAAIA,EAAOC,OAAO,GAAGC,cACpDF,EAAOG,MAAM,KAEXC,E,4MACJC,OAAS,CAAC,QAAS,cAAe,SAAU,UAAW,U,EAEvDC,MAAQ,CACNtB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,I,EAGVS,SAAW,SAACC,GAAW,IAAD,EACIA,EAAMC,OAAtBC,EADY,EACZA,KAAMC,EADM,EACNA,MAEd,EAAKC,UAAS,SAACN,GACb,OAAO,2BACFA,GADL,4BAEMI,GAASC,Q,EAKnBE,aAAe,SAACL,GACdA,EAAMM,iBADkB,MAEgC,EAAKR,MAArDtB,EAFgB,EAEhBA,MAAOC,EAFS,EAETA,YAAaa,EAFJ,EAEIA,OAAQZ,EAFZ,EAEYA,OAAQC,EAFpB,EAEoBA,QAE5C,GACEH,EAAM+B,QACH9B,EAAY8B,QACZjB,EAAOiB,QACP7B,EAAO6B,QACP5B,EAAQ4B,OACX,CACA,IAAMnB,EAAQ,CACZZ,QACAC,cACAC,SACAC,UACAW,UAGF,EAAKc,SAAS,CACZ3B,YAAa,GACba,OAAQ,GACRX,QAAS,GACTD,OAAQ,GACRF,MAAO,KAGT,EAAKgC,MAAMC,MAAMrB,K,uDAIX,IAAD,OACP,OACE,0BACEc,KAAK,YACLQ,OAAO,OACP9B,UAAU,QACV+B,SAAUC,KAAKP,cAEdO,KAAKf,OAAOV,KAAI,SAAA0B,GAAK,OACpB,2BACEX,KAAMX,EAAqBsB,GAC3BxB,IAAKwB,EACLC,KAAK,OACLC,YAAaF,EACbG,SAAU,EAAKjB,SACfnB,UAAU,gBACVuB,MAAO,EAAKL,MAAMP,EAAqBsB,IACvCI,UAAQ,OAGZ,4BAAQH,KAAK,SAASlC,UAAU,UAAhC,qB,GAzEesC,a,OCFVC,EAAb,4MACErB,MAAQ,CACNZ,OAAQkC,GAFZ,EAKEC,SAAW,SAACjC,GACV,EAAKgB,UAAS,SAACN,GACb,MAAO,CACLZ,OAAO,GAAD,mBAAMY,EAAMZ,QAAZ,CAAoBE,SARlC,uDAaY,IACAF,EAAW0B,KAAKd,MAAhBZ,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU6B,MAAOG,KAAKS,iBAtBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7eca2762.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nconst lowercaseFirstLetter = string => string.charAt(0).toLowerCase()\n  + string.slice(1);\n\nclass NewMovie extends Component {\n  fields = ['Title', 'Description', 'ImgUrl', 'ImdbUrl', 'ImdbId'];\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  setField = (event) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => {\n      return {\n        ...state,\n        [`${name}`]: value,\n      };\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, description, imdbId, imgUrl, imdbUrl } = this.state;\n\n    if (\n      title.trim()\n      && description.trim()\n      && imdbId.trim()\n      && imgUrl.trim()\n      && imdbUrl.trim()\n    ) {\n      const movie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      this.setState({\n        description: '',\n        imdbId: '',\n        imdbUrl: '',\n        imgUrl: '',\n        title: '',\n      });\n\n      this.props.onAdd(movie);\n    }\n  }\n\n  render() {\n    return (\n      <form\n        name=\"new-movie\"\n        method=\"POST\"\n        className=\"field\"\n        onSubmit={this.handleSubmit}\n      >\n        {this.fields.map(field => (\n          <input\n            name={lowercaseFirstLetter(field)}\n            key={field}\n            type=\"text\"\n            placeholder={field}\n            onChange={this.setField}\n            className=\"input is-info\"\n            value={this.state[lowercaseFirstLetter(field)]}\n            required\n          />\n        ))}\n        <button type=\"submit\" className=\"button\">\n          Add new film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport { NewMovie };\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}