{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","fields","state","Title","Description","ImgUrl","ImdbUrl","ImdbId","value","this","setState","event","preventDefault","trim","props","onAdd","name","method","onSubmit","handleSubmit","field","type","placeholder","onChange","setField","target","required","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCrBJK,G,kNACJC,OAAS,CAAC,QAAS,cAAe,SAAU,UAAW,U,EAEvDC,MAAQ,CACNC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTC,OAAQ,I,uDAGDT,EAAKU,GACZC,KAAKC,UAAS,SAACR,GACb,OAAO,2BACFA,GADL,4BAEMJ,GAAQU,S,mCAKLG,GACXA,EAAMC,iBADY,MAEsCH,KAAKP,MAArDC,EAFU,EAEVA,MAAOC,EAFG,EAEHA,YAAaG,EAFV,EAEUA,OAAQF,EAFlB,EAEkBA,OAAQC,EAF1B,EAE0BA,QAE5C,GACEH,EAAMU,QACHT,EAAYS,QACZN,EAAOM,QACPR,EAAOQ,QACPP,EAAQO,OACX,CACA,IAAMhB,EAAQ,CACZZ,MAAOkB,EACPjB,YAAakB,EACbjB,OAAQkB,EACRjB,QAASkB,EACTP,OAAQQ,GAGVE,KAAKC,SAAS,CACZP,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTC,OAAQ,KAGVE,KAAKK,MAAMC,MAAMlB,M,+BAIX,IAAD,OACP,OACE,0BACEmB,KAAK,YACLC,OAAO,OACP5B,UAAU,QACV6B,SAAU,SAAAP,GAAK,OAAI,EAAKQ,aAAaR,KAEpCF,KAAKR,OAAOL,KAAI,SAAAwB,GAAK,OACpB,2BACEtB,IAAKsB,EACLC,KAAK,OACLC,YAAaF,EACbG,SAAU,SAAAZ,GAAK,OAAI,EAAKa,SAASJ,EAAOT,EAAMc,OAAOjB,QACrDnB,UAAU,gBACVmB,MAAO,EAAKN,MAAMkB,GAClBM,UAAQ,OAGZ,4BAAQL,KAAK,SAAShC,UAAU,UAAhC,qB,GAtEesC,c,OCCVC,EAAb,4MACE1B,MAAQ,CACNP,OAAQkC,GAFZ,EAKEC,SAAW,SAACjC,GACV,EAAKa,UAAS,SAACR,GACb,MAAO,CACLP,OAAO,GAAD,mBAAMO,EAAMP,QAAZ,CAAoBE,SARlC,uDAaY,IACAF,EAAWc,KAAKP,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU0B,MAAON,KAAKqB,iBAtBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0b734d2c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nclass NewMovie extends Component {\n  fields = ['Title', 'Description', 'ImgUrl', 'ImdbUrl', 'ImdbId'];\n\n  state = {\n    Title: '',\n    Description: '',\n    ImgUrl: '',\n    ImdbUrl: '',\n    ImdbId: '',\n  };\n\n  setField(key, value) {\n    this.setState((state) => {\n      return {\n        ...state,\n        [`${key}`]: value,\n      };\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { Title, Description, ImdbId, ImgUrl, ImdbUrl } = this.state;\n\n    if (\n      Title.trim()\n      && Description.trim()\n      && ImdbId.trim()\n      && ImgUrl.trim()\n      && ImdbUrl.trim()\n    ) {\n      const movie = {\n        title: Title,\n        description: Description,\n        imgUrl: ImgUrl,\n        imdbUrl: ImdbUrl,\n        imdbId: ImdbId,\n      };\n\n      this.setState({\n        Title: '',\n        Description: '',\n        ImgUrl: '',\n        ImdbUrl: '',\n        ImdbId: '',\n      });\n\n      this.props.onAdd(movie);\n    }\n  }\n\n  render() {\n    return (\n      <form\n        name=\"new-movie\"\n        method=\"POST\"\n        className=\"field\"\n        onSubmit={event => this.handleSubmit(event)}\n      >\n        {this.fields.map(field => (\n          <input\n            key={field}\n            type=\"text\"\n            placeholder={field}\n            onChange={event => this.setField(field, event.target.value)}\n            className=\"input is-info\"\n            value={this.state[field]}\n            required\n          />\n        ))}\n        <button type=\"submit\" className=\"button\">\n          Add new film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport { NewMovie };\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}